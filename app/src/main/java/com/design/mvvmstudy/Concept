

* 비즈니스 로직 / 프레젠테이션 로직 이란?

Ex. 사용자는 회원가입을 위해 회원정보를 작성하고, 회원가입 버튼을 누른다.

이때, 개발 입장에서는 본인의 인증이 올바른지 등, DB/API를 통해 조사한다.

즉,  (1) 중복 계정이 있는지/없는지를 검사하기 위한 일련의 과정들
     (2) 사용자에게 단순히 텍스트나 팝업으로 알리기
         (=> 가공된 데이터를 단순히 표시만 해주는 것)

이때 (1) 영역을 비즈니스 로직 이라고 하며
     (2) 영역을 프레젠테이션(View) 로직이라고 한다.



* MVVM 이란?

   View          ViewModel          Model
   (UI)        (비즈니스 로직)     (데이터)


View는 ViewModel을 관찰하여 데이터의 변화를 Observe 하고,
ViewModel은 데이터가 변하면 View에게 그 사실을 Callbacks 해준다.

ViewModel은 Model에게 데이터를 요청하고
Model은 ViewModel에게 데이터를 Callbacks 해준다.

즉, View   ->   ViewModel   ->   Model
    View   <-   ViewModel   <-   Model

순서이다.


* MVVM 원칙?

Google은 하나의 View에 하나의 ViewModel만 두고 사용하는 것을 권장한다.
(Ex. SignUpActivity에서 SignUpViewModel 하나만 두고, 그 안에 여러 Model과 LiveData를 사용하는 것을 권장)

하지만, MVVM의 원래 원칙은 View와 ViewModel이 1:N 관계라서, 여러 ViewModel이 존재할 수 있다.
더 좋고 더 나쁜 방식은 없으므로, 어떤것이 자신에게 맞는지는 개발자가 판단해야 한다.


* LiveData 란?

LiveData는 해당 Activity/Fragment의 LifeCycle을 인지하고 자동으로 Observe 상태를 관리해준다.
(그러므로 LiveData는 사용하기 위해서 LifeCycle 종속성을 추가해줘야 한다.)

즉, 사용되지 않을때 자동으로 Observing을 해제했다가 사용될 때 다시 Observe 하는 것이다.
이로인해 메모리 누수의 위험이 사라진다.
(자동으로 되는 이유는 LiveData의 observe() 메소드에 LifeCycleOwner 변수로써 Activity/Fragment를 넣어주기 때문에,
각 화면 생명주기에 따라 LiveData는 자신의 임무를 수행한다.)




















